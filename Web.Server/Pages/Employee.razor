@page "/employee"
@page "/employee/{id}"

@inject APIService api
@inject IJSRuntime JSRuntime; 

<h2>Save Employee</h2>

    @if (Emp == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <div class="card shadow p-3 mb-5 bg-white rounded">
            <EditForm Model="@Emp" OnSubmit="@HandleSubmitAsync">
                <DataAnnotationsValidator />
                <ValidationSummary />
                <input type="hidden" @bind="Emp.Id">
                <div class="card-header">
                    <div class="shadow-sm p-3 bg-white rounded container-fluid">
                        <div class="picture-container">
                            <div class="picture">
                                <img src="https://www.mnkinfotech.com/wp-content/uploads/2015/05/leadership-150x150.jpg"
                                    class="picture-src" id="wizardPicturePreview" title="">
                                <input type="file" id="wizard-picture" class="form-control">
                            </div>
                            <label for="wizard-picture" class="font-weight-light fa fa-camera-retro fa-2x"></label>
                        </div>
                        <hr>
                        <div class="row mt-3">
                            <div class="col-sm-5 form-group">
                                <label for="@nameof(Emp.NameFirst)">First Name</label>
                                <InputText id="@nameof(Emp.NameFirst)" @bind-Value="Emp.NameFirst" class="form-control" />
                                <ValidationMessage For="@(() => Emp.NameFirst)" />
                            </div>  
                            <div class="col-sm-2 form-group">
                                <label for="NameMiddle">Middle</label>
                                <input id="NameMiddle" class="form-control" placeholder="Middle Name" @bind-value="Emp.NameMiddle" />
                            </div>
                            <div class="col-sm-5 form-group">
                                <label for="@nameof(Emp.NameLast)">Last Name</label>
                                <InputText id="@nameof(Emp.NameLast)" @bind-Value="Emp.NameLast" class="form-control" />
                                <ValidationMessage For="@(() => Emp.NameLast)" />
                            </div>  
                        </div>
                        <div class="row">
                            <div class="col-sm-5 form-group">
                                <label for="@nameof(Emp.DateOfBirth)">Date of Birth</label>
                                <InputDate id="@nameof(Emp.DateOfBirth)" @bind-Value="Emp.DateOfBirth" class="form-control"  min="1920-01-01" max="@MaxDate"/>
                                <ValidationMessage For="@(() => Emp.DateOfBirth)" />
                            </div>
                            <div class="col-sm-7 form-group">
                                <label for="@nameof(Emp.SSN)">Social Security Number</label>
                                <InputText id="@nameof(Emp.SSN)" @bind-Value="Emp.SSN" class="form-control" />
                                <ValidationMessage For="@(() => Emp.SSN)" />
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-sm-12">
                                <button type="submit" class="btn btn-primary btn-block" id="btnSubmit">Save</button>
                            </div>
                        </div>
                    </div>
                </div>
            </EditForm>
             <div class="card-body">
                <div class="container-fluid">
                    <div id="accordion" class="panel-group">
                        <Web.Server.Components.Personal EmpPersonal="Emp" />
                        <Web.Server.Components.Address EmployeeId="Emp.Id" />
                        <Web.Server.Components.EmploymentInfo EmployeeId="Emp.Id" />
                        <Web.Server.Components.ImmigrationInfo EmployeeId="Emp.Id" />
                        <Web.Server.Components.EmergencyContactInfo EmployeeId="Emp.Id" />
                    </div>
                </div>
            </div>
        </div>
    }


@code {

    private EmployeeModel Emp;
    private string MaxDate = DateTime.Now.AddYears(-17).ToString("yyyy-MM-dd");

    [Parameter]
    public string Id { get; set; }
    protected override async Task OnInitializedAsync()
    {
        Emp = new EmployeeModel();
        try 
        { 
            if (!string.IsNullOrWhiteSpace(Id))
            {
                int empId = 1;
                Int32.TryParse(Id, out empId);

                Emp = await api.GetEmployeeByIdAsync(empId);
            }
        }
        catch(Exception ex)
        {
            
        }
    }
    
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JSRuntime.InvokeVoidAsync("setDatePicker", "dob");
        } 
    }
    
    private async Task HandleSubmitAsync()
    {
        Emp = await api.SaveEmployeeAsync(Emp);
    }

}
