@page "/userole"

@attribute [Authorize]

@inject HttpClient Http
@inject IAccessTokenProvider TokenProvider
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage
@inject Web.Client.Services.IAPIService apiService


<h1>User Roles</h1>

@if (!string.IsNullOrWhiteSpace(Role))
{
    <p>
        Logged in user's role = @Role
    </p>
}
else
{
    <p><em>Loading...</em></p>
}
@if (!string.IsNullOrWhiteSpace(BaseUri))
{
    <p>BaseUri: @BaseUri</p>

}

@if (!string.IsNullOrWhiteSpace(errorMsg))
{
    <p>Error: @errorMsg</p>

}


@code {

    private string errorMsg { get; set; }
    private string Role { get; set; }
    private string BaseUri { get; set; }

    protected override async Task OnInitializedAsync()
    {
#if DEBUG
        System.Threading.Thread.Sleep(10000);
#endif
        try
        {
            var userRole = await apiService.GetUserRole("abc");
            if (null != userRole)
            {
                errorMsg = userRole.RoleName;
            }

        }
        catch (Exception ex)
        {
            errorMsg = ex.ToString();
        }

    }

}
