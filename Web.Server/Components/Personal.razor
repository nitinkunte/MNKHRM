
@inject APIService api

<div class="panel">
    <div class="panel-heading">
        <h4 class="panel-title">
            <a href="#panelBodyPersonal" class="accordion-toggle" data-toggle="collapse"
                data-parent="#accordion">Personal Information</a>
        </h4>
    </div>
    <EditForm Model="@EmpPersonal" OnValidSubmit="HandleSubmitPersonalAsync">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <input type="hidden" @bind="EmpPersonal.Id">
        <div id="panelBodyPersonal" class="panel-collapse collapse in">
            <div class="panel-body shadow-sm mb-3 p-3 bg-white rounded">
                <div>
                    <div class="d-flex justify-content-between">
                        <p>
                            <button type="submit" class="btn btn-outline-primary">Save Personal Information</button>
                        </p>
                        <p>
                            <button type="reset" class="btn btn-outline-secondary">Reset</button>
                        </p>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-4 form-group">
                        <label for="gender">Gender</label>
                        <InputSelect @bind-Value="EmpPersonal.Gender" class="form-control">
                            @foreach (var gender in Enum.GetValues(typeof( Web.DTO.Enums.GenderEnum)))
                            {
                                <option value="@gender">
                                    @gender
                                </option>
                            }
                        </InputSelect>
                    </div>
                    <div class="col-sm-8 form-group">
                        <label for="NamePrintOnCheck">Name to be printed on check</label>
                        <input id="NamePrintOnCheck" class="form-control" placeholder="Name on check"
                            @bind="EmpPersonal.NamePrintOnCheck" />
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-4 form-group">
                        <label for="maritalStatus">Maritial Status</label>
                        <InputSelect @bind-Value="EmpPersonal.MaritalStatus" class="form-control">
                            @foreach (var ms in Enum.GetValues(typeof( Web.DTO.Enums.MaritalStatusEnum)))
                            {
                                <option value="@ms">
                                    @ms
                                </option>
                            }
                        </InputSelect>                            
                    </div>
                    <div class="col-sm-4 form-group">
                        <label for="Ethnicity">Ethnicity</label>
                        <InputSelect @bind-Value="EmpPersonal.Ethnicity" class="form-control">
                            @foreach (var eth in Enum.GetValues(typeof( Web.DTO.Enums.EthnicityEnum)))
                            {
                                <option value="@eth">
                                    @eth
                                </option>
                            }
                        </InputSelect>
                    </div>
                    <div class="col-sm-4 form-group">
                        <label for="isDisabled">Is Disabled</label> &nbsp;&nbsp;
                        <InputCheckbox type="checkbox" class="form-check-input" id="isDisabled" @bind-Value="EmpPersonal.IsDisabled" />
                        @if (EmpPersonal.IsDisabled)
                        {
                            <InputTextArea id="disablitydesc" class="form-control" rows="3" @bind-Value="EmpPersonal.DisabilityDesc"></InputTextArea>
                        }
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-12 form-group">
                        <label for="notes">Notes</label>
                        <InputTextArea id="Notes" class="form-control" rows="3" @bind-Value="EmpPersonal.Notes"></InputTextArea>
                    </div>
                </div>
            
            </div>
        </div>
    </EditForm>
</div>


@code{
    [Parameter]
    public EmployeeModel EmpPersonal { get; set; }
    private string MaxDate = DateTime.Now.AddYears (-17).ToString ("yyyy-MM-dd");

    //private string isDisabled = "";

    protected override async Task OnInitializedAsync () 
    {
        //isDisabled = (EmpPersonal?.IsDisabled == true) ? "checked" : "";
    }

    private async Task HandleSubmitPersonalAsync () 
    {
        if (EmpPersonal?.Id > 0) {
            EmpPersonal = await api.SaveEmployeeAsync (EmpPersonal);
        }
    }
}   