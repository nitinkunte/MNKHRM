@inject APIService api



@if (EmpInfo == null)
{
    <p><em>Loading Employment Information...</em></p>
}
else
{
    <EditForm Model="@EmpInfo" OnValidSubmit="HandleSubmitAsync">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <input type="hidden" @bind="EmployeeId">
        <div class="panel">
            <div class="panel-heading">
                <h4 class="panel-title">
                    <a href="#panelBodyEmployment" class="accordion-toggle collapsed" data-toggle="collapse"
                        data-parent="#accordion">Employment Information</a>
                </h4>
            </div>
            <div id="panelBodyEmployment" class="panel-collapse collapse">
                <div class="panel-body shadow-sm p-3 mb-3 bg-white rounded">
                    <div class="">
                        <div class="d-flex justify-content-between">
                            <p>
                                <button type="submit" class="btn btn-outline-primary">Save Employment Information</button>
                            </p>
                            <p>
                                <button type="reset" class="btn btn-outline-secondary">Reset</button>
                            </p>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-6 form-group">
                            <label for="@nameof(EmpInfo.Title)">@nameof(EmpInfo.Title)</label>
                            <InputText id="@nameof(EmpInfo.Title)" @bind-Value="EmpInfo.Title" class="form-control" />
                            <ValidationMessage For="@(() => EmpInfo.Title)" />
                        </div>
                        <div class="col-6 form-group">
                            <label for="@nameof(EmpInfo.Supervisor)">@nameof(EmpInfo.Supervisor)</label>
                            <InputText id="@nameof(EmpInfo.Supervisor)" @bind-Value="EmpInfo.Supervisor" class="form-control" />
                            <ValidationMessage For="@(() => EmpInfo.Supervisor)" />
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-6 form-group">
                            <label for="@nameof(EmpInfo.Department)">@nameof(EmpInfo.Department)</label>
                            <InputText id="@nameof(EmpInfo.Department)" @bind-Value="EmpInfo.Department" class="form-control" />
                            <ValidationMessage For="@(() => EmpInfo.Department)" />
                        </div>
                        <div class="col-6 form-group">
                            <label for="@nameof(EmpInfo.Description)">@nameof(EmpInfo.Description)</label>
                            <InputText id="@nameof(EmpInfo.Description)" @bind-Value="EmpInfo.Description" class="form-control" />
                            <ValidationMessage For="@(() => EmpInfo.Description)" />
                        </div>
                    </div>
                    <hr />                    
                    <div class="row">
                        <div class="col-6 form-group">
                            <MNK.Components.MNKInputSelect @bind-Value="EmpInfo.EmploymentType" class="form-control"
                                    ValidationFor="@(() => EmpInfo.EmploymentType)" Label="Employment Type:" >
                                @foreach (var val in Enum.GetValues(typeof( Web.DTO.Enums.EmploymentTypeEnum)))
                                {
                                    <option value="@val">
                                        @val
                                    </option>
                                }
                            </MNK.Components.MNKInputSelect>
                        </div>
                        <div class="col-6">
                            <label class="form-control-label">Full Time or Part Time:</label>
                            <div class="custom-control custom-switch">
                                <InputCheckbox class="custom-control-input" id="@nameof(EmpInfo.IsFullTime)"  @bind-Value="EmpInfo.IsFullTime" />
                                <label class="custom-control-label" for="@nameof(EmpInfo.IsFullTime)">Is Full Time?</label>
                            </div>
                        </div>
                    </div>
                    <hr />
                    <div class="row">
                        <div class="col-2 form-group">
                            <label for="@nameof(EmpInfo.HireDate)">Hire Date</label>
                            <InputDate id="@nameof(EmpInfo.HireDate)" @bind-Value="EmpInfo.HireDate" class="form-control"  min="2004-01-01" max="@MaxDate"/>
                            <ValidationMessage For="@(() => EmpInfo.HireDate)" />   
                        </div>
                        <div class="col-2 form-group">
                            <label for="@nameof(EmpInfo.OriginalHireDate)">Orgingal Hire Date</label>
                            <InputDate id="@nameof(EmpInfo.OriginalHireDate)" @bind-Value="EmpInfo.OriginalHireDate" class="form-control"  min="1920-01-01" max="@MaxDate"/>
                            <ValidationMessage For="@(() => EmpInfo.OriginalHireDate)" />
                        </div>
                        <div class="col-2 form-group">
                            <label for="@nameof(EmpInfo.AdjustedServiceDate)">Adj Service Date</label>
                            <InputDate id="@nameof(EmpInfo.AdjustedServiceDate)" @bind-Value="EmpInfo.AdjustedServiceDate" class="form-control"  min="1920-01-01" max="@MaxDate"/>
                            <ValidationMessage For="@(() => EmpInfo.AdjustedServiceDate)" />
                        </div>
                        <div class="col-2 form-group">
                            <label for="@nameof(EmpInfo.ReleaseDate)">Release Date</label>
                            <InputDate id="@nameof(EmpInfo.ReleaseDate)" @bind-Value="EmpInfo.ReleaseDate" class="form-control"  min="1920-01-01" max="@MaxDate"/>
                            <ValidationMessage For="@(() => EmpInfo.ReleaseDate)" />
                        </div>
                        <div class="col-2 form-group">
                            <label for="@nameof(EmpInfo.LastDayWorked)">Last Day Worked</label>
                            <InputDate id="@nameof(EmpInfo.LastDayWorked)" @bind-Value="EmpInfo.LastDayWorked" class="form-control"  min="1920-01-01" max="@MaxDate"/>
                            <ValidationMessage For="@(() => EmpInfo.LastDayWorked)" />
                        </div>                        
                        <div class="col-2 form-group">
                            <label for="@nameof(EmpInfo.LastDayOnBenefits)">Last Day On Benefits</label>
                            <InputDate id="@nameof(EmpInfo.LastDayOnBenefits)" @bind-Value="EmpInfo.LastDayOnBenefits" class="form-control"  min="1920-01-01" max="@MaxDate"/>
                            <ValidationMessage For="@(() => EmpInfo.LastDayOnBenefits)" />
                        </div>
                    </div>
                    <hr />
                    <div class="row">
                        <div class="col-6 form-group">
                            <label class="form-control-label">Rehire Recommendations:</label>
                            <div class="custom-control custom-switch">
                                <InputCheckbox class="custom-control-input" id="@nameof(EmpInfo.IsReHireRecommended)"  @bind-Value="EmpInfo.IsReHireRecommended" />
                                <label class="custom-control-label" for="@nameof(EmpInfo.IsReHireRecommended)">Rehire?</label>
                            </div>
                        </div>
                        <div class="col-6 form-group">
                            <label class="form-control-label">Severance Pay Information:</label>
                            <div class="custom-control custom-switch">
                                <InputCheckbox class="custom-control-input" id="@nameof(EmpInfo.SeverancePaid)"  @bind-Value="EmpInfo.SeverancePaid" />
                                <label class="custom-control-label" for="@nameof(EmpInfo.SeverancePaid)">Severance Paid?</label>
                            </div>
                        </div>
                    </div>                    
                    <div class="row">
                        <div class="col-6 form-group">
                            <label for="@nameof(EmpInfo.TerminationNotes)">Termination Notes</label>
                            <InputTextArea id="@nameof(EmpInfo.TerminationNotes)" @bind-Value="EmpInfo.TerminationNotes" class="form-control" />
                            <ValidationMessage For="@(() => EmpInfo.TerminationNotes)" />
                        </div>
                        <div class="col-6 form-group">
                            <label for="@nameof(EmpInfo.SeverancePayNotes)">Severance Pay Notes</label>
                            <InputTextArea id="@nameof(EmpInfo.SeverancePayNotes)" @bind-Value="EmpInfo.SeverancePayNotes" class="form-control" />
                            <ValidationMessage For="@(() => EmpInfo.SeverancePayNotes)" />                        
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </EditForm>
}


@code{
    private EmploymentInfoModel EmpInfo;

    [Parameter]
    public int EmployeeId { get; set; }
    private string MaxDate = DateTime.Now.AddDays(7).ToString ("yyyy-MM-dd");

    protected override async Task OnInitializedAsync () 
    {
        if (EmployeeId > 0) 
        {
            EmpInfo = await api.GetEmploymentInfoAsync (EmployeeId);
        } 
        else
        {
            EmpInfo = new EmploymentInfoModel();
        }
    }

    private async Task HandleSubmitAsync () 
    {
        if (EmployeeId > 0) 
        {
            EmpInfo.EmployeeId = EmployeeId;
            EmpInfo = await api.SaveEmploymentInfoAsync(EmpInfo);
        }
    }
}