@inject APIService api



@if (ImInfo == null)
{
    <p><em>Loading Immigration Information...</em></p>
}
else
{
    <EditForm Model="@ImInfo" OnValidSubmit="HandleSubmitAsync">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <input type="hidden" @bind="EmployeeId">
        <div class="panel">
            <div class="panel-heading">
                <h4 class="panel-title">
                    <a href="#panelBodyImmigration" class="accordion-toggle collapsed"
                        data-toggle="collapse" data-parent="#accordion">Immigration Information</a>
                </h4>
            </div>
            <div id="panelBodyImmigration" class="panel-collapse collapse">
                <div class="panel-body shadow-sm p-3 bg-white rounded">
                    <div>
                        <div class="d-flex justify-content-between">
                            <p>
                                <button type="submit" class="btn btn-outline-primary">Save Immigration
                                    Information</button>
                            </p>
                            <p>
                                <button type="reset" class="btn btn-outline-secondary">Reset</button>
                            </p>
                        </div>
                        <div class="row">
                            <div class="col-sm-4 form-group">
                                 <MNK.Components.MNKInputSelect @bind-Value="ImInfo.ImmigrationStatus" class="form-control"
                                         ValidationFor="@(() => ImInfo.ImmigrationStatus)" Label="Immigration Status">
                                     @foreach (var val in Enum.GetValues(typeof(Web.DTO.Enums.ImmigrationStatusEnum)))
                                     {
                                         <option value="@val">
                                             @val
                                         </option>
                                     }
                                 </MNK.Components.MNKInputSelect>
                            </div>
                            <div class="col-sm-8 form-group">
                                <label for="calcExpiryDate">Calculated Expiry Date</label>
                                <input id="calcExpiryDate" class="form-control" placeholder="N/A" disabled aria-disabled="true" />
                            </div>
                        </div>
                        <hr>
                        <div class="">
                            <div class="cards-grid">
                                <div class="card ">
                                    <div class="card-header card-header-listA">
                                        List A
                                    </div>
                                    <div class="card-body">
                                        <div class="row p-2">
                                            <label for="@nameof(ImInfo.ListAIssuingAuthority)">Issuing Authority</label>
                                            <InputText id="@nameof(ImInfo.ListAIssuingAuthority)" @bind-Value="ImInfo.ListAIssuingAuthority" class="form-control"  placeholder="Enter Issuing Authority" />
                                            <ValidationMessage For="@(() => ImInfo.ListAIssuingAuthority)" />   
                                        </div>
                                        <div class="row p-2">
                                            <label for="@nameof(ImInfo.ListADocTitle)">Document Title</label>
                                            <InputText id="@nameof(ImInfo.ListADocTitle)" @bind-Value="ImInfo.ListADocTitle" class="form-control"  placeholder="Enter Document Title" />
                                            <ValidationMessage For="@(() => ImInfo.ListADocTitle)" />   
                                        </div>
                                        <div class="row p-2">
                                            <label for="@nameof(ImInfo.ListADocNumber)">Document Number</label>
                                            <InputText id="@nameof(ImInfo.ListADocNumber)" @bind-Value="ImInfo.ListADocNumber" class="form-control"  placeholder="Enter Document Number" />
                                            <ValidationMessage For="@(() => ImInfo.ListADocNumber)" />
                                        </div>
                                        <div class="row p-2">
                                            <label for="@nameof(ImInfo.ListAExpiryDate)">Expiry Date</label>
                                            <InputDate id="@nameof(ImInfo.ListAExpiryDate)" @bind-Value="ImInfo.ListAExpiryDate" class="form-control"  min="1920-01-01" max="@MaxDate" />
                                            <ValidationMessage For="@(() => ImInfo.ListAExpiryDate)" />
                                        </div>
                                    </div>
                                </div>
                                <div class="card">
                                    <div class="card-header card-header-listBC">
                                        List B
                                    </div>
                                    <div class="card-body">
                                        <div class="row p-2">
                                            <label for="@nameof(ImInfo.ListBIssuingAuthority)">Issuing Authority</label>
                                            <InputText id="@nameof(ImInfo.ListBIssuingAuthority)" @bind-Value="ImInfo.ListBIssuingAuthority" class="form-control"  placeholder="Enter Issuing Authority" />
                                            <ValidationMessage For="@(() => ImInfo.ListBIssuingAuthority)" />   
                                        </div>
                                        <div class="row p-2">
                                            <label for="@nameof(ImInfo.ListBDocTitle)">Document Title</label>
                                            <InputText id="@nameof(ImInfo.ListBDocTitle)" @bind-Value="ImInfo.ListBDocTitle" class="form-control"  placeholder="Enter Document Title" />
                                            <ValidationMessage For="@(() => ImInfo.ListBDocTitle)" />   
                                        </div>
                                        <div class="row p-2">
                                            <label for="@nameof(ImInfo.ListBDocNumber)">Document Number</label>
                                            <InputText id="@nameof(ImInfo.ListBDocNumber)" @bind-Value="ImInfo.ListBDocNumber" class="form-control"  placeholder="Enter Document Number" />
                                            <ValidationMessage For="@(() => ImInfo.ListBDocNumber)" />
                                        </div>
                                        <div class="row p-2">
                                            <label for="@nameof(ImInfo.ListBExpiryDate)">Expiry Date</label>
                                            <InputDate id="@nameof(ImInfo.ListBExpiryDate)" @bind-Value="ImInfo.ListBExpiryDate" class="form-control"  min="1920-01-01" max="@MaxDate" />
                                            <ValidationMessage For="@(() => ImInfo.ListBExpiryDate)" />
                                        </div>
                                    </div>
                                </div>
                                <div class="card">
                                    <div class="card-header card-header-listBC">
                                        List C
                                    </div>
                                    <div class="card-body">
                                        <div class="row p-2">
                                            <label for="@nameof(ImInfo.ListCIssuingAuthority)">Issuing Authority</label>
                                            <InputText id="@nameof(ImInfo.ListCIssuingAuthority)" @bind-Value="ImInfo.ListCIssuingAuthority" class="form-control"  placeholder="Enter Issuing Authority" />
                                            <ValidationMessage For="@(() => ImInfo.ListCIssuingAuthority)" />   
                                        </div>
                                        <div class="row p-2">
                                            <label for="@nameof(ImInfo.ListCDocTitle)">Document Title</label>
                                            <InputText id="@nameof(ImInfo.ListCDocTitle)" @bind-Value="ImInfo.ListCDocTitle" class="form-control"  placeholder="Enter Document Title" />
                                            <ValidationMessage For="@(() => ImInfo.ListCDocTitle)" />   
                                        </div>
                                        <div class="row p-2">
                                            <label for="@nameof(ImInfo.ListCDocNumber)">Document Number</label>
                                            <InputText id="@nameof(ImInfo.ListCDocNumber)" @bind-Value="ImInfo.ListCDocNumber" class="form-control"  placeholder="Enter Document Number" />
                                            <ValidationMessage For="@(() => ImInfo.ListCDocNumber)" />
                                        </div>
                                        <div class="row p-2">
                                            <label for="@nameof(ImInfo.ListCExpiryDate)">Expiry Date</label>
                                            <InputDate id="@nameof(ImInfo.ListCExpiryDate)" @bind-Value="ImInfo.ListCExpiryDate" class="form-control"  min="1920-01-01" max="@MaxDate" />
                                            <ValidationMessage For="@(() => ImInfo.ListCExpiryDate)" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </EditForm>
}

@code {
    private ImmigrationModel ImInfo;

    [Parameter]
    public int EmployeeId { get; set; }
    private string MaxDate = DateTime.Now.AddDays(7).ToString ("yyyy-MM-dd");

    protected override async Task OnInitializedAsync () 
    {
        if (EmployeeId > 0) 
        {
            ImInfo = await api.GetImmigrationInfoAsync(EmployeeId);
        } 
        else
        {
            ImInfo = new ImmigrationModel();
        }
    }

    private async Task HandleSubmitAsync () 
    {
        if (EmployeeId > 0) 
        {
            ImInfo.EmployeeId = EmployeeId;
            ImInfo = await api.SaveImmigrationAsync(ImInfo);
        }
    }
}