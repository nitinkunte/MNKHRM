
@inject APIService api

<div class="panel">
    <div class="panel-heading">
        <h4 class="panel-title">
            <a href="#panelBodyPersonal" class="accordion-toggle" data-toggle="collapse"
                data-parent="#accordion">Personal Information</a>
        </h4>
    </div>

    <EditForm Model="@EmpPersonal" OnValidSubmit="HandleSubmitPersonalAsync">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <input type="hidden" @bind="EmpPersonal.Id">
        <div id="panelBodyPersonal" class="panel-collapse collapse in">
            <div class="panel-body shadow-sm mb-3 p-3 bg-white rounded">
                <div>
                    <div class="d-flex justify-content-between">
                        <p>
                            <button type="submit" class="btn btn-outline-primary">Save Personal Information</button>
                        </p>
                        <p>
                            <button type="reset" class="btn btn-outline-secondary">Reset</button>
                        </p>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-4 form-group">
                        <MNK.Components.MNKInputSelect @bind-Value="EmpPersonal.Gender" class="form-control"
                                ValidationFor="@(() => EmpPersonal.Gender)" Label="Please select..." >
                            @foreach (var val in Enum.GetValues(typeof(Web.DTO.Enums.GenderEnum)))
                            {
                                <option value="@val">
                                    @val
                                </option>
                            }
                        </MNK.Components.MNKInputSelect>
                    </div>
                    <div class="col-sm-8 form-group">
                        <label for="@nameof(EmpPersonal.NamePrintOnCheck)">Name to be printed on check</label>
                        <InputText id="@nameof(EmpPersonal.NamePrintOnCheck)" @bind-Value="EmpPersonal.NamePrintOnCheck" class="form-control"  placeholder="Enter Name to be printed on check" />
                        <ValidationMessage For="@(() => EmpPersonal.NamePrintOnCheck)" />
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-4 form-group">
                        <MNK.Components.MNKInputSelect @bind-Value="EmpPersonal.MaritalStatus" class="form-control"
                                ValidationFor="@(() => EmpPersonal.MaritalStatus)" Label="Please select..." 
                                ShowDefaultOption="true">
                            @foreach (var val in Enum.GetValues(typeof( Web.DTO.Enums.MaritalStatusEnum)))
                            {
                                <option value="@val">
                                    @val
                                </option>
                            }
                        </MNK.Components.MNKInputSelect>
                    </div>
                    <div class="col-sm-4 form-group">
                        <MNK.Components.MNKInputSelect @bind-Value="EmpPersonal.Ethnicity" class="form-control"
                                ValidationFor="@(() => EmpPersonal.Ethnicity)" Label="Please select..." 
                                ShowDefaultOption="true">
                            @foreach (var eth in Enum.GetValues(typeof( Web.DTO.Enums.EthnicityEnum)))
                            {
                                <option value="@eth">
                                    @eth
                                </option>
                            }
                        </MNK.Components.MNKInputSelect>
                    </div>
                    <div class="col-sm-4 form-group">
                        <label class="form-control-label">Disability</label>
                        <div class="custom-control custom-switch">
                            <InputCheckbox class="custom-control-input" id="@nameof(EmpPersonal.IsDisabled)"  @bind-Value="EmpPersonal.IsDisabled" />
                            <label class="custom-control-label" for="@nameof(EmpPersonal.IsDisabled)">Does Employee have any disability?</label>
                        </div>
                        @if (EmpPersonal.IsDisabled)
                        {
                            <label for="@nameof(EmpPersonal.DisabilityDesc)">Disability Description</label>
                            <InputTextArea id="disablitydesc" class="form-control" rows="3" @bind-Value="EmpPersonal.DisabilityDesc"></InputTextArea>
                            <ValidationMessage For="@(() => EmpPersonal.DisabilityDesc)" />
                        }
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-12 form-group">
                        <label for="@nameof(EmpPersonal.Notes)">Notes</label>
                        <InputTextArea id="Notes" class="form-control" rows="3" @bind-Value="EmpPersonal.Notes"></InputTextArea>
                        <ValidationMessage For="@(() => EmpPersonal.Notes)" />
                    </div>
                </div>
            
            </div>
        </div>
    </EditForm>
</div>


@code{
    [Parameter]
    public EmployeeModel EmpPersonal { get; set; }
    private string MaxDate = DateTime.Now.AddYears (-17).ToString ("yyyy-MM-dd");

    protected override async Task OnInitializedAsync () 
    {
        
    }

    private async Task HandleSubmitPersonalAsync () 
    {
        if (EmpPersonal?.Id > 0) {
            EmpPersonal = await api.SaveEmployeeAsync (EmpPersonal);
        }
    }
}   