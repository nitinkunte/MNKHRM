@page "/authentication/{action}"
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication

@inject IAccessTokenProvider TokenProvider
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage
@inject Web.Client.Services.IAPIService apiService

<RemoteAuthenticatorView Action="@Action" OnLogInSucceeded=@this.OnLogInSucceeded />

@code{ [Parameter] public string Action { get; set; }

    [CascadingParameter]
    public Task<AuthenticationState> authenticationState { get; set; }

    public async void OnLogInSucceeded()
    {

        var user = (await authenticationState).User;

        if (user.Identity.IsAuthenticated)
        {
            try
            {
                Console.WriteLine("Inside Athentication.razor");
                var tokenResult = await TokenProvider.RequestAccessToken();
                if (tokenResult.TryGetToken(out var token))
                {
                    await sessionStorage.SetItemAsync("accessToken", token.Value);
                    var userRoleModel = await apiService.LoginAsync();
                    if (!string.IsNullOrWhiteSpace(userRoleModel.RoleName))
                    {
                        await sessionStorage.SetItemAsync("roleName", userRoleModel.RoleName);
                        Console.WriteLine($"Inside Athentication.razor ==> RoleName={userRoleModel.RoleName}");
                    }
                }
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Inside Athentication.razor Error:==> {ex.ToString()}");
            }
        }
    } }


