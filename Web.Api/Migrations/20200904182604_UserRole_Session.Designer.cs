// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Web.Api.Data;

namespace Web.Api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200904182604_UserRole_Session")]
    partial class UserRole_Session
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7");

            modelBuilder.Entity("Web.DTO.Data.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AddressType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Fax")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PhoneLand")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneMobile")
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Street1")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Street2")
                        .HasColumnType("TEXT");

                    b.Property<string>("Street3")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("TEXT");

                    b.Property<string>("Website")
                        .HasColumnType("TEXT");

                    b.Property<string>("Zip")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasAlternateKey("EmployeeId", "AddressType");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("Web.DTO.Data.EmergencyContact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("RelationshipStatus")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasAlternateKey("EmployeeId", "RelationshipStatus");

                    b.ToTable("EmergencyContacts");
                });

            modelBuilder.Entity("Web.DTO.Data.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AddressHomeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AddressOtherId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<int>("EmploymentInfoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Ethnicity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Gender")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ImmigrationId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDisabled")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsI9OnFile")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaritalStatus")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NameFirst")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NameLast")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NameMiddle")
                        .HasColumnType("TEXT");

                    b.Property<string>("NamePrintOnCheck")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .HasColumnType("TEXT");

                    b.Property<string>("SSN")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Web.DTO.Data.EmploymentInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("AdjustedServiceDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Department")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EmploymentType")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsExempt")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsFullTime")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsKeyEmployee")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsReHireRecommended")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsSeasonal")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastDayOnBenefits")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastDayWorked")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("OriginalHireDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("ProtestUnemployment")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("SeverancePaid")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SeverancePayNotes")
                        .HasColumnType("TEXT");

                    b.Property<string>("Supervisor")
                        .HasColumnType("TEXT");

                    b.Property<string>("TerminationDetail")
                        .HasColumnType("TEXT");

                    b.Property<string>("TerminationNotes")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId")
                        .IsUnique();

                    b.ToTable("EmploymentInfos");
                });

            modelBuilder.Entity("Web.DTO.Data.Immigration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsListA")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ListADocNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("ListADocTitle")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ListAExpiryDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ListAIssuingAuthority")
                        .HasColumnType("TEXT");

                    b.Property<string>("ListBDocNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("ListBDocTitle")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ListBExpiryDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ListBIssuingAuthority")
                        .HasColumnType("TEXT");

                    b.Property<string>("ListCDocNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("ListCDocTitle")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ListCExpiryDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ListCIssuingAuthority")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId")
                        .IsUnique();

                    b.ToTable("Immigrations");
                });

            modelBuilder.Entity("Web.DTO.Data.SessionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserName");

                    b.ToTable("SessionModels");
                });

            modelBuilder.Entity("Web.DTO.Data.UserRoleModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasAlternateKey("UserName");

                    b.HasIndex("UserName");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("Web.DTO.Data.EmploymentInfo", b =>
                {
                    b.HasOne("Web.DTO.Data.Employee", "Employee")
                        .WithOne("EmploymentInfo")
                        .HasForeignKey("Web.DTO.Data.EmploymentInfo", "EmployeeId");
                });

            modelBuilder.Entity("Web.DTO.Data.Immigration", b =>
                {
                    b.HasOne("Web.DTO.Data.Employee", "Employee")
                        .WithOne("Immigration")
                        .HasForeignKey("Web.DTO.Data.Immigration", "EmployeeId");
                });
#pragma warning restore 612, 618
        }
    }
}
