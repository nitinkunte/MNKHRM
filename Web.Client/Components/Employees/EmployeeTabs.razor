<RadzenTabs>
    <Tabs>
        <RadzenTabsItem Text="Personal">
            <RadzenTextBox Placeholder="Search..." Change="@(args => Change(args, "TextBox with placeholder"))" Style="margin-bottom: 20px" />
        </RadzenTabsItem>
        <RadzenTabsItem Text="Address">
            <Web.Client.Components.Employees.Personal></Web.Client.Components.Employees.Personal>
        </RadzenTabsItem>
        <RadzenTabsItem Text="Immigration">
            <RadzenDatePicker @bind-Value="value" DateFormat="d" Change="@(args => Change(args, "DatePicker", "MM/dd/yyyy"))" />
        </RadzenTabsItem>
    </Tabs>
</RadzenTabs>

@code {
    DateTime? value = DateTime.Now;

    IEnumerable<DateTime> dates = new DateTime[] { DateTime.Today.AddDays(-1), DateTime.Today.AddDays(1) };

    Dictionary<DateTime, string> events = new Dictionary<DateTime, string>();

    void Change(DateTime? value, string name, string format)
    {
        events.Add(DateTime.Now, $"{name} value changed to {value?.ToString(format)}");
        StateHasChanged();
    }
    void Change(string value, string name)
    {
        events.Add(DateTime.Now, $"{name} value changed to {value}");
        StateHasChanged();
    }
    void DateRenderSpecial(DateRenderEventArgs args)
    {
        if (dates.Contains(args.Date))
        {
            args.Attributes.Add("style", "background-color: #ff6d41; border-color: white;");
        }
    }

    void DateRender(DateRenderEventArgs args)
    {
        args.Disabled = dates.Contains(args.Date);
    }
}
